theme(legend.position="none") +
coord_flip()
tidy_nyp %>%
filter(!composer %in% c('NULL', 'Traditional,', 'Anthem,')) %>%
count(composer, sort=TRUE) %>%
filter(n > 400) %>%
mutate(composer = reorder(composer, n)) %>%
ggplot(aes(composer, n, fill = composer)) +
geom_bar(stat = 'identity') +
xlab('Composer') +
ylab('Number of works performed') +
theme(legend.position="none") +
coord_flip()
tidy_nyp %>%
filter(!title %in% c('NULL')) %>%
mutate(composer_work = paste(composer, '-', title)) %>%
group_by(composer_work, programID) %>%
summarize(times_on_program = n()) %>%
count(composer_work, sort=TRUE) %>%
filter(n > 250) %>%
mutate(composer_work = reorder(composer_work, n)) %>%
ggplot(aes(composer_work, n, fill = composer_work)) +
geom_bar(stat = 'identity') +
xlab('Composer and work') +
ylab('Number of times performed') +
theme(legend.position="none") +
coord_flip()
tidy_nyp %>%
filter(!title %in% c('NULL')) %>%
mutate(composer_work = paste(composer, '-', title)) %>%
group_by(composer_work, programID) %>%
summarize(times_on_program = n()) %>%
count(composer_work, sort=TRUE) %>%
filter(n > 200) %>%
mutate(composer_work = reorder(composer_work, n)) %>%
ggplot(aes(composer_work, n, fill = composer_work)) +
geom_bar(stat = 'identity') +
xlab('Composer and work') +
ylab('Number of times performed') +
theme(legend.position="none") +
coord_flip()
tidy_nyp %>%
filter(!title %in% c('NULL')) %>%
mutate(composer_work = paste(composer, '-', title)) %>%
group_by(composer_work, programID) %>%
summarize(times_on_program = n()) %>%
count(composer_work, sort=TRUE) %>%
filter(n > 220) %>%
mutate(composer_work = reorder(composer_work, n)) %>%
ggplot(aes(composer_work, n, fill = composer_work)) +
geom_bar(stat = 'identity') +
xlab('Composer and work') +
ylab('Number of times performed') +
theme(legend.position="none") +
coord_flip()
tidy_nyp %>%
filter(!title %in% c('NULL')) %>%
mutate(composer_work = paste(composer, '-', title)) %>%
group_by(composer_work, programID) %>%
count(composer_work, sort=TRUE) %>%
filter(n > 220) %>%
mutate(composer_work = reorder(composer_work, n)) %>%
ggplot(aes(composer_work, n, fill = composer_work)) +
geom_bar(stat = 'identity') +
xlab('Composer and work') +
ylab('Number of times performed') +
theme(legend.position="none") +
coord_flip()
tidy_nyp %>%
filter(!title %in% c('NULL')) %>%
mutate(composer_work = paste(composer, '-', title)) %>%
group_by(composer_work, programID) %>%
summarize(times_on_program = n()) %>%
count(composer_work, sort=TRUE) %>%
filter(n > 220) %>%
mutate(composer_work = reorder(composer_work, n)) %>%
ggplot(aes(composer_work, n, fill = composer_work)) +
geom_bar(stat = 'identity') +
xlab('Composer and work') +
ylab('Number of times performed') +
theme(legend.position="none") +
coord_flip()
tidy_nyp %>%
filter(!composer %in% c('NULL', 'Traditional,', 'Anthem,'),) %>%
filter(year < 1930) %>%
count(composer, sort=TRUE) %>%
filter(n > 400) %>%
mutate(composer = reorder(composer, n)) %>%
ggplot(aes(composer, n, fill = composer)) +
geom_bar(stat = 'identity') +
xlab('Composer') +
ylab('Number of works performed') +
theme(legend.position="none") +
coord_flip()
View(tidy_nyp)
tidy_nyp %>%
filter(!composer %in% c('NULL', 'Traditional,', 'Anthem,'),) %>%
filter(as.integer(substr(as.character(date),1,4)) < 1930) %>%
count(composer, sort=TRUE) %>%
filter(n > 400) %>%
mutate(composer = reorder(composer, n)) %>%
ggplot(aes(composer, n, fill = composer)) +
geom_bar(stat = 'identity') +
xlab('Composer') +
ylab('Number of works performed') +
theme(legend.position="none") +
coord_flip()
tidy_nyp %>%
filter(!composer %in% c('NULL', 'Traditional,', 'Anthem,'),) %>%
filter(as.integer(substr(as.character(season),1,4)) < 1930) %>%
count(composer, sort=TRUE) %>%
filter(n > 400) %>%
mutate(composer = reorder(composer, n)) %>%
ggplot(aes(composer, n, fill = composer)) +
geom_bar(stat = 'identity') +
xlab('Composer') +
ylab('Number of works performed') +
theme(legend.position="none") +
coord_flip()
View(tidy_nyp)
tidy_nyp %>%
filter(!composer %in% c('NULL', 'Traditional,', 'Anthem,'),) %>%
filter(as.integer(substr(as.character(date),1,4)) < 1930) %>%
count(composer, sort=TRUE) %>%
filter(n > 400) %>%
mutate(composer = reorder(composer, n)) %>%
ggplot(aes(composer, n, fill = composer)) +
geom_bar(stat = 'identity') +
xlab('Composer') +
ylab('Number of works performed') +
theme(legend.position="none") +
coord_flip()
tidy_nyp %>%
filter(!composer %in% c('NULL', 'Traditional,', 'Anthem,')) %>%
filter(as.integer(substr(as.character(date),1,4)) < 1930) %>%
count(composer, sort=TRUE) %>%
filter(n > 400) %>%
mutate(composer = reorder(composer, n)) %>%
ggplot(aes(composer, n, fill = composer)) +
geom_bar(stat = 'identity') +
xlab('Composer') +
ylab('Number of works performed') +
theme(legend.position="none") +
coord_flip()
tidy_nyp %>%
filter(!composer %in% c('NULL', 'Traditional,', 'Anthem,')) %>%
filter(as.integer(substr(as.character(date),1,4)) < 1930) %>%
count(composer, sort=TRUE) %>%
filter(n > 200) %>%
mutate(composer = reorder(composer, n)) %>%
ggplot(aes(composer, n, fill = composer)) +
geom_bar(stat = 'identity') +
xlab('Composer') +
ylab('Number of works performed') +
theme(legend.position="none") +
coord_flip()
tidy_nyp %>%
filter(!composer %in% c('NULL', 'Traditional,', 'Anthem,')) %>%
filter(as.integer(substr(as.character(date),1,4)) >= 1930) %>%
count(composer, sort=TRUE) %>%
filter(n > 200) %>%
mutate(composer = reorder(composer, n)) %>%
ggplot(aes(composer, n, fill = composer)) +
geom_bar(stat = 'identity') +
xlab('Composer') +
ylab('Number of works performed') +
theme(legend.position="none") +
coord_flip()
tidy_nyp %>%
filter(!composer %in% c('NULL', 'Traditional,', 'Anthem,')) %>%
filter(as.integer(substr(as.character(date),1,4)) >= 1930) %>%
count(composer, sort=TRUE) %>%
filter(n > 300) %>%
mutate(composer = reorder(composer, n)) %>%
ggplot(aes(composer, n, fill = composer)) +
geom_bar(stat = 'identity') +
xlab('Composer') +
ylab('Number of works performed') +
theme(legend.position="none") +
coord_flip()
tidy_nyp %>%
filter(!composer %in% c('NULL', 'Traditional,', 'Anthem,')) %>%
filter(as.integer(substr(as.character(date),1,4)) >= 1930) %>%
count(composer, sort=TRUE) %>%
filter(n > 350) %>%
mutate(composer = reorder(composer, n)) %>%
ggplot(aes(composer, n, fill = composer)) +
geom_bar(stat = 'identity') +
xlab('Composer') +
ylab('Number of works performed') +
theme(legend.position="none") +
coord_flip()
comp_counts <- tidy_nyp %>%
filter(!composer %in% c('NULL', 'Traditional,', 'Anthem,')) %>%
mutate(year = as.integer(substr(as.character(date),1,4))) %>%
group_by(year) %>%
mutate(year_total = n()) %>%
group_by(composer, year) %>%
mutate(comp_total_by_year = n()) %>%
ungroup() %>%
group_by(composer, year, comp_total_by_year, year_total) %>%
summarize() %>%
mutate(share = comp_total_by_year/year_total) %>%
group_by(year) %>%
mutate(average_share = mean(share))
View(comp_counts)
View(comp_counts)
View(comp_by_years)
View(comp_share)
comp_share <- comp_counts %>%
mutate(share_norm = share / average_share) # need to create average share
View(comp_share)
comp_share %>%
filter(composer %in% c('Beethoven,  Ludwig  van',
'Tchaikovsky,  Pyotr  Ilyich',
'Wagner,  Richard',
'Mozart,  Wolfgang  Amadeus')) %>%
ggplot() +
geom_line(aes(year, share_norm, color = composer), alpha = 0.8, size = 0.7) +
labs(x = 'Year',
y = 'Normalized share of works in repertoire (share / average share)',
title = 'Composers\' changing (normalized) share of NY Philharmonic repertoire over time')
comp_by_years %>%
ggplot(aes(year, comp_per_year)) +
geom_line()
comp_counts %>%
filter(composer %in% c('Beethoven,  Ludwig  van',
'Tchaikovsky,  Pyotr  Ilyich',
'Wagner,  Richard',
'Mozart,  Wolfgang  Amadeus')) %>%
ggplot() +
geom_line(aes(year, share, color = composer), alpha = 0.8, size = 0.7) +
labs(x = 'Year',
y = 'Percentage of works in repertoire',
title = 'Composers\' changing share of NY Philharmonic repertoire over time')
comp_by_years %>%
ggplot(aes(year, comp_per_year)) +
geom_line()
comp_by_years %>%
ggplot(aes(year, comp_per_year)) +
geom_line() +
xlab('Year') +
ylab('Composers appearing on a program')
View(comp_share)
View(comp_counts)
comp_share %>%
filter(composer %in% c('Beethoven,  Ludwig  van',
'Tchaikovsky,  Pyotr  Ilyich',
'Wagner,  Richard',
'Mozart,  Wolfgang  Amadeus')) %>%
ggplot() +
geom_line(aes(year, share_norm, color = composer), alpha = 0.8, size = 0.7) +
labs(x = 'Year',
y = 'Normalized share of works in repertoire (share / average share)',
title = 'Composers\' changing (normalized) share of NY Philharmonic repertoire over time')
comp_share %>%
filter(composer %in% c('Beethoven,  Ludwig  van',
'Tchaikovsky,  Pyotr  Ilyich',
'Wagner,  Richard',
'Mozart,  Wolfgang  Amadeus')) %>%
ggplot() +
geom_line(aes(year, share_norm, color = composer), alpha = 0.8, size = 0.7) +
labs(x = 'Year',
y = 'Normalized share of works in repertoire (share / average share)')
View(tidy_nyp)
View(comp_counts)
View(comp_share)
comp_share %>%
filter(composer %in% c('Beethoven,  Ludwig  van',
'Tchaikovsky,  Pyotr  Ilyich',
'Wagner,  Richard',
'Mozart,  Wolfgang  Amadeus',
'Shostakovich,  Dmitri')) %>%
ggplot() +
geom_line(aes(year, share_norm, color = composer), alpha = 0.8, size = 0.7) +
labs(x = 'Year',
y = 'Normalized share of works in repertoire (share / average share)')
comp_share %>%
filter(composer %in% c('Beethoven,  Ludwig  van',
'Tchaikovsky,  Pyotr  Ilyich',
'Wagner,  Richard',
'Mozart,  Wolfgang  Amadeus',
'Shostakovich,  Dmitri'),
year > 1929,
year < 1955) %>%
ggplot() +
geom_line(aes(year, share_norm, color = composer), alpha = 0.8, size = 0.7) +
labs(x = 'Year',
y = 'Normalized share of works in repertoire (share / average share)')
comp_share %>%
filter(composer %in% c('Tchaikovsky,  Pyotr  Ilyich',
'Wagner,  Richard',
'Shostakovich,  Dmitri'),
year > 1929,
year < 1955) %>%
ggplot() +
geom_line(aes(year, share_norm, color = composer), alpha = 0.8, size = 0.7) +
labs(x = 'Year',
y = 'Normalized share of works in repertoire (share / average share)')
comp_share %>%
filter(composer %in% c('Tchaikovsky,  Pyotr  Ilyich',
'Shostakovich,  Dmitri'),
year > 1929,
year < 1955) %>%
ggplot() +
geom_line(aes(year, share_norm, color = composer), alpha = 0.8, size = 0.7) +
labs(x = 'Year',
y = 'Normalized share of works in repertoire (share / average share)')
setwd("~/R")
tidy_nyp %>%
filter(!composer %in% c('NULL', 'Traditional,', 'Anthem,')) %>%
filter(as.integer(substr(as.character(date),1,4)) < 1930) %>%
count(composer, sort=TRUE) %>%
filter(n > 350) %>%
mutate(composer = reorder(composer, n)) %>%
ggplot(aes(composer, n, fill = composer)) +
geom_bar(stat = 'identity') +
xlab('Composer') +
ylab('Number of works performed') +
theme(legend.position="none") +
ggtitle('Most performed composers, NY Philharmonic, 1842-1929')
library(jsonlite)
library(tidyverse)
library(tidytext)
library(stringr)
library(scales)
library(tidyjson)
library(purrr)
library(lubridate)
library(broom)
tidy_nyp %>%
filter(!composer %in% c('NULL', 'Traditional,', 'Anthem,')) %>%
filter(as.integer(substr(as.character(date),1,4)) < 1930) %>%
count(composer, sort=TRUE) %>%
filter(n > 350) %>%
mutate(composer = reorder(composer, n)) %>%
ggplot(aes(composer, n, fill = composer)) +
geom_bar(stat = 'identity') +
xlab('Composer') +
ylab('Number of works performed') +
theme(legend.position="none") +
ggtitle('Most performed composers, NY Philharmonic, 1842-1929')
tidy_nyp %>%
filter(!composer %in% c('NULL', 'Traditional,', 'Anthem,')) %>%
filter(as.integer(substr(as.character(date),1,4)) < 1930) %>%
count(composer, sort=TRUE) %>%
filter(n > 350) %>%
mutate(composer = reorder(composer, n)) %>%
ggplot(aes(composer, n, fill = composer)) +
geom_bar(stat = 'identity') +
xlab('Composer') +
ylab('Number of works performed') +
theme(legend.position="none") +
ggtitle('Most performed composers, NY Philharmonic, 1842-1929') +
coord_flip()
tidy_nyp %>%
filter(!composer %in% c('NULL', 'Traditional,', 'Anthem,')) %>%
filter(as.integer(substr(as.character(date),1,4)) >= 1930) %>%
count(composer, sort=TRUE) %>%
filter(n > 350) %>%
mutate(composer = reorder(composer, n)) %>%
ggplot(aes(composer, n, fill = composer)) +
geom_bar(stat = 'identity') +
xlab('Composer') +
ylab('Number of works performed') +
theme(legend.position="none") +
ggtitle('Most performed composers, NY Philharmonic, 1930-2016') +
coord_flip()
tidy_nyp %>%
filter(!composer %in% c('NULL', 'Traditional,', 'Anthem,')) %>%
filter(as.integer(substr(as.character(date),1,4)) >= 1930) %>%
count(composer, sort=TRUE) %>%
filter(n > 400) %>%
mutate(composer = reorder(composer, n)) %>%
ggplot(aes(composer, n, fill = composer)) +
geom_bar(stat = 'identity') +
xlab('Composer') +
ylab('Number of works performed') +
theme(legend.position="none") +
ggtitle('Most performed composers, NY Philharmonic, 1930-2016') +
coord_flip()
tidy_nyp %>%
filter(!composer %in% c('NULL', 'Traditional,', 'Anthem,')) %>%
filter(as.integer(substr(as.character(date),1,4)) >= 1930) %>%
count(composer, sort=TRUE) %>%
filter(n > 500) %>%
mutate(composer = reorder(composer, n)) %>%
ggplot(aes(composer, n, fill = composer)) +
geom_bar(stat = 'identity') +
xlab('Composer') +
ylab('Number of works performed') +
theme(legend.position="none") +
ggtitle('Most performed composers, NY Philharmonic, 1930-2016') +
coord_flip()
tidy_nyp %>%
filter(!composer %in% c('NULL', 'Traditional,', 'Anthem,')) %>%
filter(as.integer(substr(as.character(date),1,4)) >= 1930) %>%
count(composer, sort=TRUE) %>%
filter(n > 600) %>%
mutate(composer = reorder(composer, n)) %>%
ggplot(aes(composer, n, fill = composer)) +
geom_bar(stat = 'identity') +
xlab('Composer') +
ylab('Number of works performed') +
theme(legend.position="none") +
ggtitle('Most performed composers, NY Philharmonic, 1930-2016') +
coord_flip()
tidy_nyp %>%
filter(!composer %in% c('NULL', 'Traditional,', 'Anthem,')) %>%
filter(as.integer(substr(as.character(date),1,4)) < 1930) %>%
count(composer, sort=TRUE) %>%
filter(n > 300) %>%
mutate(composer = reorder(composer, n)) %>%
ggplot(aes(composer, n, fill = composer)) +
geom_bar(stat = 'identity') +
xlab('Composer') +
ylab('Number of works performed') +
theme(legend.position="none") +
ggtitle('Most performed composers, NY Philharmonic, 1930-2016') +
coord_flip()
tidy_nyp %>%
filter(!composer %in% c('NULL', 'Traditional,', 'Anthem,')) %>%
filter(as.integer(substr(as.character(date),1,4)) < 1930) %>%
count(composer, sort=TRUE) %>%
filter(n > 250) %>%
mutate(composer = reorder(composer, n)) %>%
ggplot(aes(composer, n, fill = composer)) +
geom_bar(stat = 'identity') +
xlab('Composer') +
ylab('Number of works performed') +
theme(legend.position="none") +
ggtitle('Most performed composers, NY Philharmonic, 1930-2016') +
coord_flip()
tidy_nyp %>%
filter(!composer %in% c('NULL', 'Traditional,', 'Anthem,')) %>%
filter(as.integer(substr(as.character(date),1,4)) < 1930) %>%
count(composer, sort=TRUE) %>%
filter(n > 200) %>%
mutate(composer = reorder(composer, n)) %>%
ggplot(aes(composer, n, fill = composer)) +
geom_bar(stat = 'identity') +
xlab('Composer') +
ylab('Number of works performed') +
theme(legend.position="none") +
ggtitle('Most performed composers, NY Philharmonic, 1930-2016') +
coord_flip()
comp_share %>%
filter(composer %in% c('Beethoven,  Ludwig  van',
'Tchaikovsky,  Pyotr  Ilyich',
'Wagner,  Richard',
'Mozart,  Wolfgang  Amadeus')) %>%
ggplot() +
geom_line(aes(year, share_norm, color = composer), alpha = 0.8, size = 0.7) +
labs(x = 'Year',
y = 'Normalized share of works in repertoire (share / average share)',
title = 'X')
comp_share %>%
filter(composer %in% c('Beethoven,  Ludwig  van',
'Tchaikovsky,  Pyotr  Ilyich',
'Wagner,  Richard',
'Mozart,  Wolfgang  Amadeus')) %>%
ggplot() +
geom_line(aes(year, share_norm, color = composer), alpha = 0.8, size = 0.7) +
labs(x = 'Year',
y = 'Normalized share of works in repertoire (share / average share)',
title = 'Changing repertoire share of the top four composers in the\nNY Philharmonic performance history')
View(comp_counts)
View(comp_counts)
library(dplyr)
library(tidytext)
library(stringr)
library(scales)
library(tidyr)
library(tm)
library(topicmodels)
library(broom)
library(purrr)
library(lubridate)
library(readr)
setwd("C:/Users/jstommel-admin/repos/whitehouse")
trump <- read_csv('trump-20170125.csv')
trump <- read_csv('trump-20170125.csv')
trump
tidy_trump <- trump %>%
unnest_tokens(word, text) %>%
anti_join(stop_words)
View(tidy_trump)
tidy_trump %>%
count(word, sort = TRUE)
tidy_trump %>%
count(word, sort = TRUE)
library(dplyr)
library(tidytext)
library(stringr)
library(scales)
library(tidyr)
library(tm)
library(topicmodels)
library(broom)
library(purrr)
library(lubridate)
library(readr)
trump <- read_csv('trump-20170125.csv')
# unnest trump whitehouse.gov corpus by word, remove stop words
tidy_trump <- trump %>%
unnest_tokens(word, text) %>%
anti_join(stop_words)
# most common words
tidy_trump %>%
count(word, sort = TRUE)
tidy_trump %>%
count(word, sort = TRUE)
